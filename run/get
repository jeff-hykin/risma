#!/usr/bin/env -S deno run --allow-all --no-lock
import { combinationOfChoices } from 'https://esm.sh/gh/jeff-hykin/good-js@06a5077/source/flattened/combination_of_choices.js'
import { randomlyShuffle } from 'https://esm.sh/gh/jeff-hykin/good-js@06a5077/source/flattened/randomly_shuffle.js'
import { main } from '../main.js'
import { Console, clearAnsiStylesFrom, black, white, red, green, blue, yellow, cyan, magenta, lightBlack, lightWhite, lightRed, lightGreen, lightBlue, lightYellow, lightMagenta, lightCyan, blackBackground, whiteBackground, redBackground, greenBackground, blueBackground, yellowBackground, magentaBackground, cyanBackground, lightBlackBackground, lightRedBackground, lightGreenBackground, lightYellowBackground, lightBlueBackground, lightMagentaBackground, lightCyanBackground, lightWhiteBackground, bold, reset, italic, underline, inverse, strikethrough, gray, grey, lightGray, lightGrey, grayBackground, greyBackground, lightGrayBackground, lightGreyBackground, } from "https://deno.land/x/quickr@0.7.6/main/console.js"
import {createStorageObject} from 'https://esm.sh/gh/jeff-hykin/storage-object@4b807ad/deno.js'
import { rankedCompare } from 'https://esm.sh/gh/jeff-hykin/good-js@1.15.0.0/source/flattened/ranked_compare.js'
import { indent } from 'https://esm.sh/gh/jeff-hykin/good-js@1.15.0.0/source/flattened/indent.js'
import { escapeRegexReplace } from 'https://esm.sh/gh/jeff-hykin/good-js@1.15.0.0/source/flattened/escape_regex_replace.js'

const references = Object.values(main.activeProject.references).sort((a,b)=>rankedCompare(b.score,a.score))

// 
// filtering
// 
let nicknamed = []
let results = []
for (let each of references) {
    if ((each?.notes?.nickname||"").toLowerCase().includes(Deno.args.join(" ").toLowerCase())) {
        nicknamed.push(each)
    } else {
        if (each.title.toLowerCase().includes(Deno.args.join(" ").toLowerCase())) {
            results.push(each)
        }
    }
}
const limit = 10
results = [...nicknamed,...results]


// 
// output formatting
// 
import { displayReferences } from "../tools/project_tools.js"
displayReferences(results, {limit})