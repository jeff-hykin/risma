import { zip, enumerate, count, permute, combinations, wrapAroundGet } from "https://deno.land/x/good@1.13.5.0/array.js"
import { FileSystem, glob } from "https://deno.land/x/quickr@0.6.73/main/file_system.js"
import { frequencyCount } from "https://esm.sh/gh/jeff-hykin/good-js@1.14.1.0/source/flattened/frequency_count.js"

var d = Deno.readTextFileSync('/Users/jeffhykin/repos/risma/abstracts.yml')
var l = d.replace(/\W/g,e=>e=="\n"?e:"").toLowerCase().split(/\n/g)
let c = ["the",
"be",
"to",
"of",
"and",
"a",
"in",
"that",
"have",
"I",
"it",
"for",
"not",
"on",
"with",
"he",
"as",
"you",
"do",
"at",
"this",
"but",
"his",
"by",
"from",
"they",
"we",
"say",
"her",
"she",
"or",
"an",
"will",
"my",
"one",
"all",
"would",
"there",
"their",
"what",
"so",
"up",
"out",
"if",
"about",
"who",
"get",
"which",
"go",
"me",
"when",
"make",
"can",
"like",
"time",
"no",
"just",
"him",
"know",
"take",
"people",
"into",
"year",
"your",
"good",
"some",
"could",
"them",
"see",
"other",
"than",
"then",
"now",
"look",
"only",
"come",
"its",
"over",
"think",
"also",
"back",
"after",
"use",
"two",
"how",
"our",
"work",
"first",
"well",
"way",
"even",
"new",
"want",
"because",
"any",
"these",
"give",
"day",
"most",
"are",
"data",
"approach",
"show",
"using",
"method",
"where",
"has",
"was",
"very",
"must",
"need",
"were",
"should",
"us",].map(each=>each.toLowerCase().replace(/s$/,""))
var m = l.filter(each=>each.length&&!each.match(/^\d+$/)).map(each=>each.replace(/s$/,"")).filter(each=>!c.includes(each))
var f = frequencyCount(m)
const vals = (zip(f.keys(),f.values()).sort((a,b)=>a[1]-b[1]))
FileSystem.write({data: vals.join("\n"), path:"words.json"})